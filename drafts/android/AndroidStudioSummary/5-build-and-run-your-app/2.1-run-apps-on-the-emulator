
Run apps on the Android Emulator
The Android Emulator simulates Android devices on your computer so that you can test your application on a variety of devices and Android API levels without needing to have each physical device.

The emulator provides almost all of the capabilities of a real Android device. You can simulate incoming phone calls and text messages, specify the location of the device, simulate different network speeds, simulate rotation and other hardware sensors, access the Google Play Store, and much more.

Testing your app on the emulator is in some ways faster and easier than doing so on a physical device. For example, you can transfer data faster to the emulator than to a device connected over USB.

The emulator comes with predefined configurations for various Android phone, tablet, Wear OS, and Android TV devices.

Watch the following video for an overview of some emulator features.

You can use the emulator manually through its graphical user interface and programmatically through the command line and the emulator console. For a comparison of the features available through each interface, see Comparison of Android Emulator tools.

Install the emulator
To install the Android Emulator, select the Android Emulator component in the SDK Tools tab of the SDK Manager. For instructions, see Update your tools using the SDK Manager.

Requirements and recommendations
The Android Emulator has additional requirements beyond the basic system requirements for Android Studio:

SDK Tools 26.1.1 or higher
64-bit processor
Windows: CPU with UG (unrestricted guest) support
HAXM 6.2.1 or later (HAXM 7.2.0 or later recommended)
The use of hardware acceleration has additional requirements on Windows and Linux:

Intel processor on Windows or Linux: Intel processor with support for Intel VT-x, Intel EM64T (Intel 64), and Execute Disable (XD) Bit functionality
AMD processor on Linux: AMD processor with support for AMD Virtualization (AMD-V) and Supplemental Streaming SIMD Extensions 3 (SSSE3)
AMD processor on Windows: Android Studio 3.2 or higher and Windows 10 April 2018 release or higher for Windows Hypervisor Platform (WHPX) functionality
To work with Android 8.1 (API level 27) and higher system images, an attached webcam must have the capability to capture 720p frames.

Android virtual devices
Each instance of the Android Emulator uses an Android virtual device (AVD) to specify the Android version and hardware characteristics of the simulated device. To effectively test your app, you should create an AVD that models each device on which your app is designed to run. To create and manage AVDs, use the AVD Manager.

Each AVD functions as an independent device, with its own private storage for user data, SD card, and so on. By default, the emulator stores the user data, SD card data, and cache in a directory specific to that AVD. When you launch the emulator, it loads the user data and SD card data from the AVD directory.

Run an app on the Android Emulator
You can run an app from an Android Studio project, or you can run an app that's been installed on the Android Emulator as you would run any app on a device.

To start the Android Emulator and run an app in your project:

Open an Android Studio project and click Run .
The Select Deployment Target dialog appears.

Select Deployment Target dialog
If you receive an error or warning message at the top of the dialog, click the link to correct the problem or get more information.
The No USB devices or running emulators detected warning means that you don’t currently have any emulators running or any detected hardware devices connected to your computer. If you don’t have hardware devices connected to your computer or any emulators running, you can ignore the message.

Some errors you must fix before you can continue, such as certain Hardware Accelerated Execution Manager (Intel HAXM) errors.

For Mac, if you see a Warning: No DNS servers found error when starting the emulator, check to see whether you have an /etc/resolv.conf file. If not, enter the following command in a terminal window:

ln -s /private/var/run/resolv.conf /etc/resolv.conf
In the Select Deployment Target dialog, select an existing emulator definition, and then click OK.
If you don’t see a definition you want to use, click Create New Virtual Device to launch the AVD Manager. After you define a new AVD, in the Select Deployment Target dialog, click OK.

If you want to use this emulator definition as the default for your project, select Use same selection for future launches.

Launch the Android Emulator without first running an app
To start the emulator:

Open the AVD Manager.
Double-click an AVD, or click Run .
The Android Emulator appears.

While the emulator is running, you can run Android Studio projects and choose the emulator as the target device. You can also drag one or more APKs onto the emulator to install them, and then run them.

Install and add files
To install an APK file on the emulated device, drag an APK file onto the emulator screen. An APK Installer dialog appears. When the installation completes, you can view the app in your apps list.

To add a file to the emulated device, drag the file onto the emulator screen. The file is placed in the /sdcard/Download/ directory. You can view the file from Android Studio using the Device File Explorer, or find it from the device using the Downloads or Files app, depending on the device version.

Snapshots
A snapshot is a stored image of an AVD (Android Virtual Device) that preserves the entire state of the device at the time that it was saved – including OS settings, application state, and user data. You can return to a saved system state by loading a snapshot whenever you choose, saving you the time of waiting for the operating system and applications on the virtual device to restart, as well as saving you the effort of bringing your app back to the state at which you want to resume your testing. Starting a virtual device by loading a snapshot is much like waking a physical device from a sleep state, as opposed to booting it from a powered-off state.

For each AVD, you can have one quick-boot snapshot and any number of general snapshots.

The simplest way to take advantage of snapshots is to use quick-boot snapshots: By default, each AVD is set to automatically save a quick-boot snapshot on exit and load from a quick-boot snapshot on start.

The first time that an AVD starts, it must perform a cold boot, just like powering on a device. If Quick Boot is enabled, all subsequent starts load from the specified snapshot, and the system is restored to the state saved in that snapshot.

Snapshots are valid for the system image, AVD configuration, and emulator features with which they are saved. When you make a change in any of these areas, all snapshots of the affected AVD become invalid. Any update to the Android Emulator, system image, or AVD settings resets the AVD's saved state, so the next time you start the AVD, it must perform a cold boot.

Most controls for saving, loading, and managing snapshots are in the Snapshots pane in the emulator's Extended controls window.



You can also control the Quick Boot options when starting the emulator from the command line.

Save quick-boot snapshots
To control whether the emulator automatically saves a snapshot for the currently open AVD when exiting, use the Save quick-boot state on exit menu in the Settings tab of the Snapshots category in the emulator's Extended controls window:

Yes: Always save an AVD snapshot when you close the emulator. This is the default.
No: Don't save an AVD snapshot when you close the emulator.
Ask: Prompt for whether to save an AVD snapshot when you close the emulator.
Your selection applies only to the currently open AVD.

If you don't choose Yes in the Save quick-boot state on exit menu to automatically save a snapshot on exit, you can use the Save Now button below this menu to save a quick-boot snapshot at any time.

You cannot save snapshots while ADB is offline (such as while Android is still booting).

Save general snapshots
Whereas you can only have one quick-boot snapshot for each AVD, you can have multiple general snapshots for each AVD.

To save a general snapshot, open the emulator's Extended controls window, select the Snapshots category, and click the Take snapshot button in the lower-right corner of the window.

To edit the name and description of the selected snapshot, click the edit  button at the bottom of the window.

Delete a snapshot
To manually delete a snapshot, open the emulator's Extended controls window, select the Snapshots category, select the snapshot, and click the delete  button at the bottom of the window.

You can also specify whether you would like the emulator to automatically delete snapshots when they become invalid, such as when the AVD settings or emulator version change. By default, the emulator will ask you if you'd like for it to delete invalid snapshots. You can change this setting with the Delete invalid snapshots menu in the Settings tab of the Snapshots pane.

Load a snapshot
To load a snapshot at any time, open the emulator's Extended controls window, select the Snapshots category, choose a snapshot, and click the load  button at the bottom of the window.

In Android Studio 3.2 and higher, each device configuration includes a Boot option control in the advanced settings in the Virtual Device Configuration dialog with which you can specify which snapshot to load when starting that AVD.

Disable Quick Boot
If you want to disable Quick Boot so your AVD always performs a cold boot, do the following:

Select Tools > AVD Manager and click Edit this AVD .
Click Show Advanced Settings and scroll down to Emulated Performance.
Select Cold boot.
Cold boot once
Instead of disabling Quick Boot completely, you can cold boot just once by clicking Cold Boot Now from the AVD's drop-down menu in the AVD Manager.



Snapshot requirements and troubleshooting
Snapshots do not work with Android 4.0.4 (API level 15) or lower.
Snapshots do not work with ARM system images for Android 8.0 (API level 26).
If the emulator fails to boot from a snapshot, select Cold Boot Now for the AVD in the AVD Manager and submit a bug report.
Snapshots are not reliable when software rendering is enabled. If snapshots do not work, click Edit this AVD  in the AVD Manager and change Graphics to either Hardware or Automatic.
Loading or saving a snapshot is a memory-intensive operation. If you do not have enough RAM free when a load or save operation begins, the operating system may swap the contents of RAM to the hard disk, which can greatly slow the operation. If you experience very slow snapshot loads or saves, you may be able to speed these operations by freeing RAM. Closing applications that are not essential for your work is a good way to free RAM.
Navigate the emulator screen
Use your computer mouse pointer to mimic your finger on the touchscreen; select menu items and input fields; and click buttons and controls. Use your computer keyboard to type characters and enter emulator shortcuts.

Table 1. Gestures for navigating the emulator screen

Feature	Description
Swipe the screen	Point to the screen, press and hold the primary mouse button, swipe across the screen, and then release.
Drag an item	Point to an item on the screen, press and hold the primary mouse button, move the item, and then release.
Tap
(touch)
Point to the screen, press the primary mouse button, and then release. For example, you could click a text field to start typing in it, select an app, or press a button.
Double tap	Point to the screen, press the primary mouse button quickly twice, and then release.
Touch and hold	Point to an item on the screen, press the primary mouse button, hold, and then release. For example, you could open options for an item.
Type	You can type in the emulator by using your computer keyboard, or using a keyboard that pops up on the emulator screen. For example, you could type in a text field after you selected it.
Pinch and spread	
Pressing Control (Command on Mac) brings up a pinch gesture multi-touch interface. The mouse acts as the first finger, and across the anchor point is the second finger. Drag the cursor to move the first point.
Clicking the left mouse button acts like touching down both points, and releasing acts like picking both up.
Vertical swipe	Open a vertical menu on the screen and use the scroll wheel (mouse wheel) to scroll through the menu items until you see the one you want. Click the menu item to select it.
Perform common actions in the emulator
To perform common actions with the emulator, use the panel on the right side, as described in table 2.

You can use keyboard shortcuts to perform many common actions in the emulator. For a complete list of shortcuts in the emulator, press F1 (Command+/ on Mac) to open the Help pane in the Extended controls window.

Table 2. Common actions in the emulator

Feature	Description
Close
Close icon	Close the emulator.
Minimize
Minimize icon	Minimize the emulator window.
Resize	Resize the emulator as you would any other operating system window. The emulator maintains an aspect ratio appropriate for your device.
Power
Power icon	Click to turn the screen on or off.
Click and hold to turn the device on or off.
Volume up
Volume Up icon	Click to view a slider control and turn the volume up. Click again to turn it up more, or use the slider control to change the volume.
Volume down
Volume Down icon	Click to view a slider control and turn the volume down. Click again to turn it down more, or use the slider control to change the volume.
Rotate left
Rotate Left icon	Rotate the device 90 degrees counterclockwise.
Rotate right
Rotate Right icon	Rotate the device 90 degrees clockwise.
Take screenshot
Take Screenshot icon	Click to take a screenshot of the device. For details, see Screenshots.
Enter zoom mode
Enter Zoom Mode icon	
Click so the cursor changes to the zoom icon. To exit zoom mode, click the button again.

Zoom in and out in zoom mode:

Left-click the screen to zoom in by 25%, up to a maximum of about twice the screen resolution of the virtual device.
Right-click to zoom out.
Left-click and drag to select a box-shaped area to zoom in on.
Right-click and drag a selection box to reset to default zoom.
To pan in zoom mode, hold Control (Command on Mac) while pressing the arrow keys on the keyboard.

To tap the device screen in zoom mode, Control-click (Command-click on Mac).

Back
Back icon	Return to the previous screen, or close a dialog box, an options menu, the Notifications panel, or the onscreen keyboard.
Home
Home icon	Return to the Home screen.
Overview
Overview icon
(Recent Apps)
Tap to open a list of thumbnail images of apps you’ve worked with recently. To open an app, tap it. To remove a thumbnail from the list, swipe it left or right. This button isn't supported for Wear OS.
Menu	Press Control+M (Command+M on Mac) to simulate the Menu button.
More
More icon	Click to access other features and settings, described in the next table.
Screen recording
You can record video and audio from the Android Emulator and save the recording to a WebM or animated GIF file.

The screen recording controls are in the Screen record tab of the Extended Controls window.

Tip: You can also open the screen recording controls by pressing Control + Shift + R (Command + Shift + R on Mac).

To begin screen recording, click the Start recording button in the Screen record tab. To stop recording, click Stop recording.

Controls for playing and saving the recorded video are at the bottom of the Screen record tab. To save the video, choose WebM or GIF from the menu at the bottom of the tab and click Save.

You can also record and save a screen recording from the emulator using the following command on the command line:

adb emu screenrecord start --time-limit 10 [path to save video]/sample_video.webm

Screenshots
To take a screenshot of the virtual device, click the Take screenshot Take Screenshot icon button.

The emulator creates a PNG file with the name Screenshot_yyyymmdd-hhmmss.png using the year, month, day, hour, minute, and second of the capture. For example, Screenshot_20160219-145848.png.

By default, the screenshot is saved on your comupter desktop. To change the location to which screenshots are saved, use the Screenshot save location control in the Settings category in the emulator's Extended controls window.

You can also take screenshots from the command line with either of the following commands:

screenrecord screenshot [destination-directory]
adb emu screenrecord screenshot [destination-directory]
Virtual scene camera and ARCore
You can use the virtual scene camera in a virtual environment to experiment with augmented reality (AR) apps made with ARCore.

For information on using the virtual scene camera in the emulator, see Run AR apps in Android Emulator.

When using the emulator with a camera app, you can import an image in PNG or JPEG format to be used within a virtual scene. To choose an image for use in a virtual scene, click Add image in the Camera > Virtual scene images tab in the Extended controls window. This feature can be used to import custom images such as QR codes for use with any camera-based app. For more information, see Add Augmented Images to the scene.

Extended controls, settings, and help
Use the extended controls to send data, change device properties, control apps, and more. To open the Extended controls window, click More  in the emulator panel.

You can use keyboard shortcuts to perform many of these tasks. For a complete list of shortcuts in the emulator, press F1 (Command+/ on Mac) to open the Help pane.

Table 3. Extended controls details

Feature	Description
Location	
The emulator lets you simulate "my location" information: the location where the emulated device is currently located. For example, if you click My Location My Location icon in Google Maps and then send a location, the map shows it.

To send a GPS location:

Select Decimal or Sexagesimal.
Specify the location.
In decimal mode, enter a Latitude value in the range -90.0 to +90.0 degrees and a Longitude value in the range -180.0 to +180.0 degrees.

In sexigesimal mode, enter a three-part Latitude value in the range -90 to +90 degrees, 0 to 59 minutes, and 0.0 to 60.0 seconds. Enter a Longitude value in the range -180 to +180 degrees, 0 to 59 minutes, and 0.0 to 60.0 seconds.

For the latitude, - indicates south and + indicates north; for the longitude, - indicates west and + indicates east. The + is optional.

Optionally specify an Altitude value in the range -1,000.0 to +10,000.0 meters.

Click Send.
To use geographic data from a GPS exchange format (GPX) or Keyhole Markup Language (KML) file:

Click Load GPX/KML.
In the file dialog, select a file on your computer and click Open.
Optionally select a Speed.
The speed defaults to the Delay value (Speed 1X). You can increase the speed by double (Speed 2X), triple (Speed 3X), and so on.

Click Run .
Cellular	
The emulator lets you simulate various network conditions. You can approximate the network speed for different network protocols, or you can specify Full, which transfers data as quickly as your computer allows. Specifying a network protocol is always slower than Full. You can also specify the voice and data network status, such as roaming. The defaults are set in the AVD.

Select a Network type:

GSM: Global System for Mobile Communications
HSCSD: High-Speed Circuit-Switched Data
GPRS: Generic Packet Radio Service
EDGE: Enhanced Data rates for GSM Evolution
UMTS: Universal Mobile Telecommunications System
HSPDA: High-Speed Downlink Packet Access
LTE: Long-Term Evolution
Full (default): Use the network as provided by your computer
Select a Signal strength:

None
Poor
Moderate (default)
Good
Great
Select a Voice status, Data status, or both:

Home (default)
Roaming
Searching
Denied (emergency calls only)
Unregistered (off)
Battery	
You can simulate the battery properties of a device to see how your app performs under different conditions. To select a Charge level, use the slider control.

Select a Charger connection value:

None
AC charger
Select a Battery health value:

Good (default)
Failed
Dead
Overvoltage
Overheated
Unknown
Select a Battery status value:

Unknown
Charging (default)
Discharging
Not charging
Full
Phone	
The emulator lets you simulate incoming phone calls and text messages.

To initiate a call to the emulator:

Select or type a phone number in the From field.
Click Call Device.
Optionally click Hold Call to put the call on hold.
To end the call, click End Call.
To send a text message to the emulator:

Select or type a phone number in the From field.
Type a message in the SMS message field.
Click Send Message.
Directional Pad	
If the AVD has the directional pad enabled in the hardware profile, you can use the directional pad controls with the emulator. However, not all devices can support the directional pad; for example, an Android watch. The buttons simulate the following actions:

Directional Pad Control
Fingerprint	
This control can simulate 10 different fingerprint scans. You can use it to test fingerprint integration in your app. This feature is disabled for Android 5.1 (API level 22) and lower, and for Wear OS.

To simulate a fingerprint scan on the virtual device:

Prepare an app to receive a fingerprint.
Select a Fingerprint value.
Click Touch Sensor.
Virtual sensors > Accelerometer	
This control lets you test your app against changes in device position, orientation, or both. For example, you can simulate gestures such as tilt and rotation. The accelerometer doesn't track the absolute position of the device: it just detects when a change is occurring. The control simulates the way accelerometer and magnetometer sensors would respond when you move or rotate a real device.

You must enable the accelerometer sensor in your AVD to use this control.

The control reports TYPE_ACCELEROMETER events on the x, y, and z axis. These values include gravity. For example, if the device is suspended in outer space, it would experience zero acceleration (all of x, y, and z will be 0). When the device is on Earth and laying screen-up on top of a table, the acceleration is 0, 0, and 9.8 because of gravity.

The control also reports TYPE_MAGNETIC_FIELD events, which measure the ambient magnetic field on the x, y and z axis in microteslas (μT).

To rotate the device around the x, y, and z axes, select Rotate and do one of the following:

Adjust the Yaw, Pitch, and Roll sliders and observe the position in the upper pane.
Move the device representation in the upper pane and observe the Yaw, Pitch, and Roll and how the resulting accelerometer values change.
See Computing the device's orientation for more information about how yaw, pitch, and roll are calculated.

To move the device horizontally (x) or vertically (y), select Move and do one of the following:

Adjust the X and Y sliders and observe the position in the upper pane.
Move the device representation in the upper pane and observe the X and Y slider values and how the resulting accelerometer values change.
To position the device at 0, 90, 180, or 270 degrees:

In the Device rotation area, select a button to change the rotation.
As you adjust the device, the Resulting values fields change accordingly. These are the values that an app can access.

For more information about these sensors, see Sensors overview, Motion sensors, and Position sensors.

You can import the AccelerometerPlay app to try out the Accelerometer control. Select File > New > Import Sample and select the app in the dialog. This app is showcased in the emulator video on this page.

Virtual sensors > Additional sensors	
The emulator can simulate various position and environment sensors. It lets you adjust the following sensors so you can test them with your app:

Ambient temperature: This environmental sensor measures ambient air temperature.
Magnetic field: This position sensor measures the ambient magnetic field on the X, Y, and Z axes, respectively. The values are in microteslas (μT).
Proximity: This position sensor measures the distance from an object; for example, it can notify a phone that a face is close to it to make a call. The proximity sensor must be enabled in your AVD to use this control.
Light: This environmental sensor measures illuminance. The values are in lux units.
Pressure: This environmental sensor measures ambient air pressure. The values are in millibar (hPa) units.
Relative Humidity: This environmental sensor measures ambient relative humidity.
For more information about these sensors, see Sensors overview, Position sensors, and Environment sensors.

Snapshots	See Snapshots.
Screen record	See Screen recording.
Settings > General	
Emulator window theme: Select Light or Dark.
Send keyboard shortcuts to: By default, some keyboard combinations will trigger emulator control shortcuts. If you’re developing an app that includes keyboard shortcuts, such as one targeted at devices with Bluetooth keyboards, you can change this setting to send all keyboard input to the virtual device, including input that would be a shortcut in the emulator.
Screenshot save location: Click the folder icon to specify a location to save screenshots of the emulator screen.
Use detected ADB location: If you're running the emulator from Android Studio, you should select this setting (the default). If you run the emulator from outside Android Studio and want it to use a specific adb executable, deselect this option and specify the SDK Tools location. If this setting is incorrect, features such as screenshot capture and drag-and-drop app installation won't work.
When to send crash reports: Select Always, Never, or Ask.
Show window frame around device: By default, emulators with device skin files are shown without a surrounding window frame.
Settings > Proxy	
By default, the emulator uses the Android Studio HTTP proxy settings, but this screen allows you to manually define an HTTP proxy configuration for the emulator. For more information, see Using the emulator with a proxy.

Settings > Advanced	
OpenGL ES renderer: Select the graphics acceleration type. (This is equivalant to the -gpu command line option).
Autodetect based on host: Let the emulator choose hardware or software graphics acceleration based on your computer setup. It checks if your GPU driver matches a list of known faulty GPU drivers, and if it does, the emulator disables graphics hardware emulation and instead uses the CPU.
ANGLE: (Windows only.) Use ANGLE Direct3D to render graphics in software.
SwiftShader: Use SwiftShader to render graphics in software.
Desktop native OpenGL: Use the GPU on your host computer. This option is typically the fastest. However, some drivers have issues with rendering OpenGL graphics, so it might not be a reliable option.
OpenGL ES API level: Select the maximum version of OpenGL ES to use in the emulator.
Autoselect: Let the emulator choose the OpenGL ES version based on the host and guest support.
Renderer maximum (up to OpenGL ES 3.1): Attempt to use the maximum version of OpenGL ES.
Compatibility (OpenGL ES 1.1/2.0): Use the version of OpenGL ES that is compatible with most environments.
Help > Keyboard Shortcuts	
This pane provides a complete list of keyboard shortcuts for the emulator. To open this pane while working in the emulator, press F1 (Command+/ on Mac).

For the shortcuts to work, the Send keyboard shortcuts option in the General settings pane must be set to Emulator controls (default).

Help > Emulator Help	
To go to the online documentation for the emulator, click Documentation.

To file a bug against the emulator, click Send feedback. For more information, see how to report emulator bugs.

Help > About	
See which adb port the emulator uses, as well as the Android and emulator version numbers. Compare the latest available emulator version with your version to determine if you have the latest software installed.

The emulator serial number is emulator-adb_port, which you can specify as an adb command line option, for example.

Wi-Fi
When using an AVD with API level 25 or higher, the emulator provides a simulated Wi-Fi access point ("AndroidWifi"), and Android automatically connects to it.

You can disable Wi-Fi in the emulator by running the emulator with the command-line parameter -feature -Wifi.

Limitations
The Android Emulator doesn't include virtual hardware for the following:

Bluetooth
NFC
SD card insert/eject
Device-attached headphones
USB
The watch emulator for Wear OS doesn't provide the Overview (Recent Apps) button, D-pad, and fingerprint sensor.

Content and code samples on this page are subject to the licenses described in the Content License. Java is a registered trademark of Oracle and/or its affiliates.

Last updated November 19, 2018
